<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quanxiaoha.xiaohashu.user.relation.biz.domain.mapper.FollowingDOMapper">
  <resultMap id="BaseResultMap" type="com.quanxiaoha.xiaohashu.user.relation.biz.domain.dataobject.FollowingDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="following_user_id" jdbcType="BIGINT" property="followingUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, following_user_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_following
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
      user_id, following_user_id, create_time
    from t_following
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selectCountByUserId" resultType="long" parameterType="long">
    select count(1) from t_following where user_id = #{userId}
  </select>

  <select id="selectPageListByUserId" resultMap="BaseResultMap" parameterType="map">
    select following_user_id from t_following
    where user_id = #{userId} order by create_time desc limit #{offset}, #{limit}
  </select>

  <select id="selectAllByUserId" resultMap="BaseResultMap">
    select following_user_id, create_time from t_following
    where user_id = #{userId} limit 1000
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_following
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByUserIdAndFollowingUserId" parameterType="map">
    delete from t_following
    where user_id = #{userId} and following_user_id = #{unfollowUserId}
  </delete>

  <insert id="insert" parameterType="com.quanxiaoha.xiaohashu.user.relation.biz.domain.dataobject.FollowingDO">
    insert into t_following (id, user_id, following_user_id, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{followingUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.quanxiaoha.xiaohashu.user.relation.biz.domain.dataobject.FollowingDO">
    insert into t_following
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="followingUserId != null">
        following_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="followingUserId != null">
        #{followingUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quanxiaoha.xiaohashu.user.relation.biz.domain.dataobject.FollowingDO">
    update t_following
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="followingUserId != null">
        following_user_id = #{followingUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quanxiaoha.xiaohashu.user.relation.biz.domain.dataobject.FollowingDO">
    update t_following
    set user_id = #{userId,jdbcType=BIGINT},
      following_user_id = #{followingUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>